{
    "hints": {},
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {
                "last_update_time": {
                    "type": "uint64",
                    "key": "lut",
                    "descr": "last update time"
                },
                "local_stake": {
                    "type": "bytes",
                    "key": "ls",
                    "descr": "Total stake of address"
                },
                "local_non_stake": {
                    "type": "bytes",
                    "key": "lns",
                    "descr": "Total token in account that is not staked, due to it being a result of a withdrawal aggregation or rewards"
                },
                "aggregation_tracker": {
                    "type": "bytes",
                    "key": "lat",
                    "descr": "information to assist with tracking users contribution since aggregations can be delayed"
                },
                "vesting_tracker": {
                    "type": "bytes",
                    "key": "vt",
                    "descr": "if account is vesting, vesting information is stored here"
                },
                "lifetime_rewards": {
                    "type": "uint64",
                    "key": "lt",
                    "descr": "lifetime rewards accumulated"
                }
            },
            "reserved": {}
        },
        "global": {
            "declared": {
                "manager": {
                    "type": "bytes",
                    "key": "m",
                    "descr": "Address that is able to modify manager settings and register participation keys"
                },
                "manager_algo_share": {
                    "type": "uint64",
                    "key": "mas",
                    "descr": "The share of algo rewards allocated for the manager of the delegation contract"
                },
                "manager_gora_share": {
                    "type": "uint64",
                    "key": "mgs",
                    "descr": "The share of gora rewards allocated for the manager of the delegation contract"
                },
                "global_aggregation_round": {
                    "type": "bytes",
                    "key": "ar",
                    "descr": "Keeps track of current aggregation round, aggregation round start (algorand round), Gora timeout"
                },
                "global_most_recent_aggregation": {
                    "type": "bytes",
                    "key": "gmra",
                    "descr": "keeps info about the most recently completed aggregation"
                },
                "global_stake_time": {
                    "type": "bytes",
                    "key": "gst",
                    "descr": "Total staketime across all addresses"
                },
                "global_stake": {
                    "type": "bytes",
                    "key": "gs",
                    "descr": "Total stake across all addresses"
                },
                "global_last_update": {
                    "type": "uint64",
                    "key": "glut",
                    "descr": "last aggregation round update"
                },
                "pending_deposits": {
                    "type": "bytes",
                    "key": "pd",
                    "descr": "Total staketime across all addresses"
                },
                "pending_withdrawals": {
                    "type": "bytes",
                    "key": "pw",
                    "descr": "Total staketime across all addresses"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "StakeDelegator",
        "methods": [
            {
                "name": "init_app",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "timelock"
                    },
                    {
                        "type": "application",
                        "name": "main_app_id"
                    },
                    {
                        "type": "address",
                        "name": "main_app_addr"
                    },
                    {
                        "type": "address",
                        "name": "manager_address"
                    },
                    {
                        "type": "uint64",
                        "name": "manager_algo_share"
                    },
                    {
                        "type": "uint64",
                        "name": "manager_gora_share"
                    },
                    {
                        "type": "pay",
                        "name": "algo_xfer"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in",
                "args": [
                    {
                        "type": "uint64",
                        "name": "vesting_app_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "stake",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset_pay"
                    },
                    {
                        "type": "account",
                        "name": "vesting_on_behalf_of"
                    },
                    {
                        "type": "application",
                        "name": "main_app_ref"
                    },
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "unstake",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount_to_withdraw"
                    },
                    {
                        "type": "application",
                        "name": "main_app_ref"
                    },
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "user_claim",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "application",
                        "name": "main_app_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "manual_process_aggregation",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "application",
                        "name": "main_app_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "register_participation_key",
                "args": [
                    {
                        "type": "address",
                        "name": "new_key"
                    },
                    {
                        "type": "application",
                        "name": "main_ref"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "configure_settings",
                "args": [
                    {
                        "type": "address",
                        "name": "manager_address"
                    },
                    {
                        "type": "uint64",
                        "name": "manager_algo_share"
                    },
                    {
                        "type": "uint64",
                        "name": "manager_gora_share"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw_non_stake",
                "args": [
                    {
                        "type": "account",
                        "name": "vesting_on_behalf_of"
                    },
                    {
                        "type": "asset",
                        "name": "gora_token_reference"
                    },
                    {
                        "type": "application",
                        "name": "main_app_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    }
}