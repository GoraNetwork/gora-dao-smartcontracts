{
    "hints": {},
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "max_start": {
                    "type": "uint64",
                    "key": "mxs",
                    "descr": "The latest that a vesting can be set to start from the current global timestamp"
                },
                "min_timeframe": {
                    "type": "uint64",
                    "key": "mntf",
                    "descr": "The shortest a timeframe can be"
                },
                "max_timeframe": {
                    "type": "uint64",
                    "key": "mxtf",
                    "descr": "The longest a timeframe can be"
                },
                "manager_address": {
                    "type": "bytes",
                    "key": "ma",
                    "descr": "Contract manager"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Vesting",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "address",
                        "name": "manager_address"
                    },
                    {
                        "type": "uint64",
                        "name": "max_start"
                    },
                    {
                        "type": "uint64",
                        "name": "min_timeframe"
                    },
                    {
                        "type": "uint64",
                        "name": "max_timeframe"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_time_constraints",
                "args": [
                    {
                        "type": "uint64",
                        "name": "max_start"
                    },
                    {
                        "type": "uint64",
                        "name": "min_timeframe"
                    },
                    {
                        "type": "uint64",
                        "name": "max_timeframe"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_manager_address",
                "args": [
                    {
                        "type": "address",
                        "name": "new_manager_address"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "optin_asset",
                "args": [
                    {
                        "type": "pay",
                        "name": "algo_xfer"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "application",
                        "name": "main_app_id"
                    },
                    {
                        "type": "address",
                        "name": "main_app_addr"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "vest_tokens",
                "args": [
                    {
                        "type": "pay",
                        "name": "algo_xfer"
                    },
                    {
                        "type": "axfer",
                        "name": "token_xfer"
                    },
                    {
                        "type": "address",
                        "name": "vest_to"
                    },
                    {
                        "type": "uint64",
                        "name": "start_time"
                    },
                    {
                        "type": "uint64",
                        "name": "time_to_vest"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_vesting",
                "args": [
                    {
                        "type": "account",
                        "name": "vestee"
                    },
                    {
                        "type": "asset",
                        "name": "asset_ref"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "stake_to_delegator",
                "args": [
                    {
                        "type": "application",
                        "name": "delegator"
                    },
                    {
                        "type": "address",
                        "name": "vestee"
                    },
                    {
                        "type": "application",
                        "name": "main_app_ref"
                    },
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw_from_delegator",
                "args": [
                    {
                        "type": "application",
                        "name": "delegator"
                    },
                    {
                        "type": "address",
                        "name": "vestee"
                    },
                    {
                        "type": "application",
                        "name": "main_app_ref"
                    },
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "account",
                        "name": "manager_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "add_whitelisted_app",
                "args": [
                    {
                        "type": "pay",
                        "name": "algo_xfer"
                    },
                    {
                        "type": "application",
                        "name": "app_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "remove_whitelisted_app",
                "args": [
                    {
                        "type": "application",
                        "name": "app_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    }
}